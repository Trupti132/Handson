create database Exercise
CREATE TABLE orders (
  ord_no INTEGER NOT NULL,
  purch_amt float NOT NULL,
  ord_date date NOT NULL,
  customer_id INTEGER NOT NULL,
  salesman_id INTEGER NOT NULL
);

Insert into orders values(70001,150.5,'2012-10-05',3005,5002);
INSERT INTO orders VALUES (70009,270.65, '2012-09-10',3001 ,5005);
INSERT INTO orders VALUES (70002,65.26, '2012-10-05',3002 ,5001);
INSERT INTO orders VALUES (70004,110.5, '2012-08-17',3009 ,5003);
INSERT INTO orders VALUES (70007,948.5, '2012-09-10',3005 ,5002);
INSERT INTO orders VALUES (70005,2400.6, '2012-07-27',3007 ,5001);
INSERT INTO orders VALUES (70008,5760, '2012-09-10',3002 ,5001);
INSERT INTO orders VALUES (70010,1983.43, '2012-10-10',3004 ,5006);
INSERT INTO orders VALUES (70003,2480.4, '2012-10-10', 3009,5003);
INSERT INTO orders VALUES (70012,250.45, '2012-06-27',3008 ,5002);
INSERT INTO orders VALUES (70011,75.29, '2012-08-17',3003 ,5007);
INSERT INTO orders VALUES (700013,3045.6,'2012-04-25',3002 ,5001);
select *from orders

drop table customer
CREATE TABLE customer(
customer_id INTEGER NOT NULL,
cust_name varchar(100) NOT NULL,
city varchar(100) NOT NULL,
grade INTEGER ,
salesman_id INTEGER NOT NULL);

INSERT INTO customer VALUES(3002,'Nick Rimando','New York',100,5001);
INSERT INTO customer VALUES(3007,'Brad Davis','New York',200,5001);
INSERT INTO customer VALUES(3005,'Graham Zusi','California',200,5002);
INSERT INTO customer VALUES(3008,'Julian Green','London',300,5002);
INSERT INTO customer VALUES(3004,'Fabian Johnson','Paris',300,5006);
INSERT INTO customer VALUES(3009,'Geoff Cameron','Berlin',100,5003);
INSERT INTO customer VALUES(3003,'Jozy Altidor','Moscow',200,5007);
INSERT INTO customer VALUES(3001,'Brad Guzan','London',NULL,5005);

select *from customer


--calculate average purchase amount of all orders. Return average purchase amount. 
select avg(purch_amt)
from orders;

--count the number of unique salespeople. Return number of salespeople.
SELECT COUNT (DISTINCT salesman_id)
FROM orders;

-- find the minimum purchase amount.
SELECT MIN(purch_amt)
FROM orders;

--highest purchase amount ordered by each customer. Return customer ID, maximum purchase amount.
SELECT customer_id,MAX(purch_amt)
FROM orders
GROUP BY customer_id;

--count the number of customers. Return number of customers.
SELECT COUNT(*)
FROM customer;

--find the highest grade of the customers for each of the city. Return city, maximum grade

SELECT city, MAX(grade)
FROM customer
GROUP BY city;


CREATE TABLE salesman (
  salesman_id INTEGER NOT NULL,
  name varchar(100) NOT NULL,
  city varchar(100) NOT NULL,
  commission varchar(100) NOT NULL
);

DROP TABLE salesman;

INSERT INTO salesman VALUES (5001, 'James Hoog', 'New York','0.15');
INSERT INTO salesman VALUES (5002, 'Nail Knite', 'Paris','0.13');
INSERT INTO salesman VALUES (5005,'Pit Alex','London','0.11');
INSERT INTO salesman VALUES (5006,'Mc Lyon','Paris','0.14');
INSERT INTO salesman VALUES (5007,'Paul Adam','Rome','0.13');
INSERT INTO salesman VALUES (5003,'Lausen Hen','San Jose','0.12');

select *from salesman
--write a SQL query to count number of orders by the combination of each order date and salesperson. Return order date, salesperson id
SELECT ord_date,salesman_id,COUNT(*) 
FROM orders 
GROUP BY ord_date,salesman_id;

--write a SQL query to count number of salespeople who belongs to a city. Return number of salespeople
SELECT COUNT(*) 
FROM salesman 
WHERE city IS NOT NULL;

--write a SQL query to count all the orders generated on '2012-08-17'. Return number of orders.
SELECT COUNT(*) 
FROM orders 
WHERE ord_date='2012-08-17';

--write a SQL query to find the maximum order (purchase) amount generated by each salesperson. 
--Return salesperson id and maximum purchase amount
SELECT customer_id,MAX(purch_amt) 
FROM orders 
WHERE customer_id BETWEEN 3002 and 3007 
GROUP BY customer_id 
HAVING MAX(purch_amt)>1000;

--write a SQL query to find the salesperson and customer who belongs to same city. Return Salesman, cust_name and city
SELECT customer.cust_name,
salesman.name, salesman.city
FROM salesman, customer
WHERE salesman.city = customer.city;

--write a SQL query to find those orders where order amount exists between 500 and 2000. Return ord_no, purch_amt, cust_name, city

SELECT  a.ord_no,a.purch_amt,
b.cust_name,b.city 
FROM orders a,customer b 
WHERE a.customer_id=b.customer_id 
AND a.purch_amt BETWEEN 500 AND 2000;

--write a SQL query to find the salesperson(s) and the customer(s) he handle. Return Customer Name, city, Salesman, commission
SELECT a.cust_name AS "Customer Name", 
a.city, b.name AS "Salesman", b.commission 
FROM customer a 
INNER JOIN salesman b 
ON a.salesman_id=b.salesman_id;


--write a SQL query to find those salespersons who received a commission from the company more than 12%. Return Customer Name, customer city, Salesman, commission.
SELECT a.cust_name AS "Customer Name", 
a.city, b.name AS "Salesman", b.commission 
FROM customer a 
INNER JOIN salesman b 
ON a.salesman_id=b.salesman_id 
WHERE b.commission>.12;


--write a SQL query to find those salespersons do not live in the same city where their customers live and received a commission from the company more than 12%. Return Customer Name, customer city, Salesman, salesman city, commission
SELECT a.cust_name AS "Customer Name", 
a.city, b.name AS "Salesman", b.city,b.commission  
FROM customer a  
INNER JOIN salesman b  
ON a.salesman_id=b.salesman_id 
WHERE b.commission>.12 
AND a.city<>b.city;






